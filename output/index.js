'use strict';var cov_265ce7s33y=function(){var path="/Users/andrewf/work/github_clones/nyc_example/src/index.js";var hash="0f638194ce6a6f24a74d6683f96dc3672cfc0ded";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/andrewf/work/github_clones/nyc_example/src/index.js",statementMap:{"0":{start:{line:3,column:16},end:{line:3,column:47}},"1":{start:{line:4,column:16},end:{line:4,column:48}},"2":{start:{line:5,column:18},end:{line:5,column:47}},"3":{start:{line:8,column:0},end:{line:8,column:39}},"4":{start:{line:8,column:33},end:{line:8,column:38}},"5":{start:{line:10,column:0},end:{line:17,column:1}},"6":{start:{line:11,column:22},end:{line:11,column:47}},"7":{start:{line:12,column:22},end:{line:12,column:47}},"8":{start:{line:13,column:4},end:{line:13,column:43}},"9":{start:{line:14,column:4},end:{line:14,column:43}},"10":{start:{line:16,column:4},end:{line:16,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:23},end:{line:8,column:24}},loc:{start:{line:8,column:33},end:{line:8,column:38}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:21},end:{line:10,column:22}},loc:{start:{line:10,column:27},end:{line:17,column:1}},line:10}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0,"1":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const testOne=(cov_265ce7s33y.s[0]++,require('./sourcemapped/index'));const testTwo=(cov_265ce7s33y.s[1]++,require('./sourcemapped/index2'));const testThree=(cov_265ce7s33y.s[2]++,require('./3rd-party/index2'));cov_265ce7s33y.s[3]++;exports.testfunction=(a,b)=>{cov_265ce7s33y.f[0]++;cov_265ce7s33y.s[4]++;return a+b;};cov_265ce7s33y.s[5]++;exports.testOthers=()=>{cov_265ce7s33y.f[1]++;const resultOne=(cov_265ce7s33y.s[6]++,testOne.testfunction(1,2));const resultTwo=(cov_265ce7s33y.s[7]++,testTwo.testfunction(3,4));cov_265ce7s33y.s[8]++;console.log(`Result 1 = ${resultOne}`);cov_265ce7s33y.s[9]++;console.log(`Result 2 = ${resultTwo}`);cov_265ce7s33y.s[10]++;return resultOne+resultTwo;};